apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kube-state-metrics.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "kube-state-metrics.name" . }}
    helm.sh/chart: {{ include "kube-state-metrics.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "kube-state-metrics.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "kube-state-metrics.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ include "kube-state-metrics.fullname" . }}
      containers:
      - image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        args:
        - "--collectors={{ include "helm-toolkit.utils.joinListWithComma" .Values.collectors }}"
        - "--metric-blacklist={{ include "helm-toolkit.utils.joinListWithComma" .Values.metric_blacklist }}"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 5
        name: kube-state-metrics
        ports:
        - containerPort: 8080
          name: http-metrics
        - containerPort: 8081
          name: telemetry
        readinessProbe:
          httpGet:
            path: /
            port: 8081
          initialDelaySeconds: 10
          timeoutSeconds: 5
        securityContext:
          runAsUser: 65534
      - name: prometheus-to-sd
        image: "{{ .Values.prometheus_to_sd.image.repository }}:{{ .Values.prometheus_to_sd.image.tag }}"
        imagePullPolicy: {{ .Values.prometheus_to_sd.image.pullPolicy }}
        command:
          - /monitor
          - --stackdriver-prefix=custom.googleapis.com
          - --source=kube-state-metrics:http://localhost:8080
          - --pod-id=$(POD_NAME)
          - --namespace-id=$(POD_NAMESPACE)
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
