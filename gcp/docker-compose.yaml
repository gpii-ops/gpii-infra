version: "3"

services:
  xk:
    image: gpii/exekube:0.4.0-google
    # With this stanza, the docker container runs -- and creates files as --
    # the user invoking docker-compose. This keeps file ownership correct on
    # Volumes that are mounted from the host machine..
    #
    # Without this, the docker container runs -- and creates files as -- root,
    # even on Volumes that are mounted from the host machine. This is
    # unexpected and leads to trouble e.g. during cleanup.
    user: ${MY_UID:?err_uid}:${MY_GID:?err_gid}
    working_dir: /project
    environment:
      ENV: ${ENV:?err}
      # Override HOME so that tools running inside the container can find their
      # configs.
      HOME: /config
      ORGANIZATION_ID:
      BILLING_ID:

      TF_INPUT: "0"
      TF_LOG:

      # TF_VAR_project_id is used to create a GCP project for our environment
      #   via the gcp-project-init script
      # It's then used by modules as a space to create resources in
      TF_VAR_project_id:

      # TF_VAR_serviceaccount_key will be used by the gcp-project-init script
      #    to put the service account key upon the creation of the GCP project
      # It can then be used by modules to authenticate to GCP
      TF_VAR_serviceaccount_key: /project/live/${ENV}/secrets/kube-system/owner.json

      # TF_VAR_default_dir is the default directory for Terraform / Terragrunt
      # Used when we run `xk up` or `xk down` without an argument
      TF_VAR_default_dir: /project/live/${ENV}/k8s

      # TF_VAR_secrets_dir is used by multiple modules to source secrets from
      TF_VAR_secrets_dir: /project/live/${ENV}/secrets

       # TF_VAR_values_dir is used by templater to put rendered files into
      TF_VAR_values_dir: /tmp/${ENV}/values

      # TF_VAR_charts_dir is the place where common charts live, relative to modules
      TF_VAR_charts_dir: ../../../../../charts

    # File with other environment variables will be populated by rake
    env_file:
      - ./.config/${ENV}/compose.env

    ports:
      - 8001:8001
    volumes:
      - .:/project
      - ../common/charts:/charts
      - ./.config/${ENV}/helm:/config/.helm
      - ./.config/${ENV}/terragrunt:/config/.terragrunt
      - ./.config/${ENV}/gcloud:/config/.config/gcloud
      - ./.config/${ENV}/kube:/config/.kube

      # Allows us to look up users and groups from the host. This is related to
      # ownership on Volumes mounted from the host. Idea is from @reduardo7:
      # https://github.com/docker/compose/issues/2380#issuecomment-392530292
      #
      # (This doesn't really help on MacOS as regular users don't appear in
      # these files.)
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro

      # EXEKUBE DEVELOPMENT
      # - ../../exekube/modules:/exekube-modules
      # ---
    command: kubectl proxy --address="0.0.0.0" --accept-hosts ".*"
