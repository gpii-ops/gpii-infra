stages:
  - setup
  - lint
  - unit-tests
  - common-stg
  - common-stg-test
  - promote-common-to-prd
  - common-prd
  - dev
  - promote-to-stg
  - stg
  - promote-to-prd
  - prd

common-setup:
  stage: setup
  tags:
    - common
  script:
    - terraform -version
    - terragrunt -version
    - aws --version
    - docker version
    - docker-compose version
    - pushd gcp/live/dev/ && rake update_exekube && popd
    - docker images | grep exekube
    - ruby --version
    - bundle version
    - rake --version
  only:
    - master@gpii-ops/gpii-infra

aws-setup:
  stage: setup
  tags:
    - aws
  script:
    - terraform -version
    - terragrunt -version
    - kubectl version --client
    - kops version
    - helm version --client
    - aws --version
    - jq --version
    - ruby --version
    - bundle version
    - rake --version
  only:
    - master@gpii-ops/gpii-infra

gcp-setup:
  stage: setup
  tags:
    - gcp
  script:
    - docker version
    - docker-compose version
    - docker pull gpii/exekube:0.4.0-google
    - docker images | grep exekube
    - ruby --version
    - bundle version
    - rake --version
  only:
    - master@gpii-ops/gpii-infra

terraform-fmt-check:
  stage: lint
  tags:
    - common
  script:
    - docker run --rm -v "$(pwd):/data" -w /data gpii/exekube:0.4.0-google -- terraform fmt --check=true
  only:
    - master@gpii-ops/gpii-infra

aws-unit-tests:
  stage: unit-tests
  tags:
    - aws
  script:
    - cd aws/rakefiles/tests
    - rake
  only:
    - master@gpii-ops/gpii-infra

gcp-unit-tests:
  stage: unit-tests
  tags:
    - gcp
  script:
    - cd shared/rakefiles/tests
    - bundle install --path "vendor/bundle"
    - rake
  only:
    - master@gpii-ops/gpii-infra

common-stg:
  stage: common-stg
  tags:
    - common
  script:
    - cd common/live/stg
    - rake clobber
    - rake configure_serviceaccount_ci_restore
    - rake apply_common_infra
    - rake apply_infra
  after_script:
    - cd common/live/stg
    - rake destroy_sa_keys[use_projectowner_sa]
  environment:
    name: stg
  only:
    - master@gpii-ops/gpii-infra

common-stg-test-gcp-dev:
  stage: common-stg-test
  tags:
    - common
  variables:
    # These variables are duplicated in common/live/stg/Rakefile
    ORGANIZATION_ID: "327626828918"
    TF_VAR_organization_name: "gpii2test"
    TF_VAR_organization_domain: "test1.gpii.net"
    TF_VAR_aws_zone_id: "Z1T3NF8J9WVBSP"
    USER: "doe"
  script:
    - cd gcp/live/dev
    - rake clobber
    - rake configure_serviceaccount_ci_restore
    - rake
    - rake test_preferences
    - rake test_flowmanager
  after_script:
    # Clean up dev environment even if one of the previous steps fails
    - cd gcp/live/dev
    # We need to chain the following into a single command to prevent various issues
    # caused by subsequent after script commands when destroy task fails.
    # More info: https://issues.gpii.net/browse/GPII-3488
    - (rake destroy && rake destroy_secrets && rake destroy_tfstate[k8s]) || true
    # Terraform state encryption key is also gone with secrets, we have to destroy tfstate as well
    - rake destroy_tfstate[locust] || true
    # Remove all SA keys except current one to prevent hitting 10 keys per SA limit (GPII-3299)
    - rake destroy_sa_keys[use_projectowner_sa] || true
    - rake clobber || true
  only:
    - master@gpii-ops/gpii-infra

common-promote-common-to-prd:
  stage: promote-common-to-prd
  tags:
    - common
  script:
    - export DATESTAMP="$(date -u '+%Y%m%d%H%M%S')"  # e.g. 20170603220542. Uses UTC.
    - echo "DATESTAMP is $DATESTAMP"  # So it's visible in the log
    - git tag "deploy-common-stg-$DATESTAMP"
    # gitlab is not clever enough to clean up an added remote and git complains
    # if we add a remote that already exists.
    - git remote | grep -q "^origin-rw" || git remote add origin-rw git@github.com:gpii-ops/gpii-infra
    - git push --tags origin-rw
  when: manual
  allow_failure: false
  only:
    - master@gpii-ops/gpii-infra

common-prd:
  stage: common-prd
  tags:
    - common
  variables:
    RAKE_REALLY_RUN_IN_PRD: "true"
  script:
    - cd common/live/prd
    - rake clobber
    - rake configure_serviceaccount_ci_restore
    - rake apply_common_infra
    - rake apply_infra
  after_script:
    - cd common/live/prd
    - rake destroy_sa_keys[use_projectowner_sa] RAKE_REALLY_DESTROY_IN_PRD=true
  environment:
    name: prd
  only:
    - master@gpii-ops/gpii-infra

aws-dev:
  stage: dev
  tags:
    - aws
  script:
    - cd aws/dev
    - bundle install --path "vendor/bundle"
    - rake clobber
    - rake
  after_script:
    # Clean up even if something failed.
    - cd aws/dev
    - rake destroy || true
    - rake clobber || true
  only:
    - master@gpii-ops/gpii-infra

gcp-dev:
  stage: dev
  tags:
    - gcp
  script:
    - cd gcp/live/dev
    - rake clobber
    - rake configure_serviceaccount_ci_restore
    - rake
    - rake test_preferences
    - rake test_flowmanager
  after_script:
    # Clean up even if something failed.
    - cd gcp/live/dev
    # We need to chain the following into a single command to prevent various issues
    # caused by subsequent after script commands when destroy task fails.
    # More info: https://issues.gpii.net/browse/GPII-3488
    - (rake destroy && rake destroy_secrets && rake destroy_tfstate[k8s]) || true
    # Terraform state encryption key is also gone with secrets, we have to destroy tfstate as well
    - rake destroy_tfstate[locust] || true
    # Remove all SA keys except current one to prevent hitting 10 keys per SA limit (GPII-3299)
    - rake destroy_sa_keys[use_projectowner_sa] || true
    - rake clobber || true
  only:
    - master@gpii-ops/gpii-infra

aws-promote-to-stg:
  stage: promote-to-stg
  tags:
    - aws
  script:
    - export DATESTAMP="$(date -u '+%Y%m%d%H%M%S')"  # e.g. 20170603220542. Uses UTC.
    - echo "DATESTAMP is $DATESTAMP"  # So it's visible in the log
    - git tag "deploy-aws-stg-$DATESTAMP"
    # gitlab is not clever enough to clean up an added remote and git complains
    # if we add a remote that already exists.
    - git remote | grep -q "^origin-rw" || git remote add origin-rw git@github.com:gpii-ops/gpii-infra
    - git push --tags origin-rw
  only:
    - master@gpii-ops/gpii-infra

gcp-promote-to-stg:
  stage: promote-to-stg
  tags:
    - gcp
  script:
    - export DATESTAMP="$(date -u '+%Y%m%d%H%M%S')"  # e.g. 20170603220542. Uses UTC.
    - echo "DATESTAMP is $DATESTAMP"  # So it's visible in the log
    - git tag "deploy-gcp-stg-$DATESTAMP"
    # gitlab is not clever enough to clean up an added remote and git complains
    # if we add a remote that already exists.
    - git remote | grep -q "^origin-rw" || git remote add origin-rw git@github.com:gpii-ops/gpii-infra
    - git push --tags origin-rw
  only:
    - master@gpii-ops/gpii-infra

aws-stg:
  stage: stg
  tags:
    - aws
  environment:
    name: stg
  script:
    - cd aws/stg
    - rake clobber
    - rake
  only:
    - master@gpii-ops/gpii-infra

gcp-stg:
  stage: stg
  tags:
    - gcp
  environment:
    name: stg
  script:
    - cd gcp/live/stg
    - rake clobber
    - rake configure_serviceaccount_ci_restore
    # Rotate Terraform state key and secrets KMS key to excercise secrets management
    - rake rotate_tfstate_key
    - rake rotate_secrets_key
    - rake
    - rake test_preferences
    - rake test_flowmanager
  after_script:
    # Clean up even if something failed.
    - cd gcp/live/stg
    # Destroy Locust module (used for smoke tests) and its TF state
    - rake destroy_module[locust] || true
    - rake destroy_tfstate[locust] || true
    # Remove all SA keys except current one to prevent hitting 10 keys per SA limit (GPII-3299)
    - rake destroy_sa_keys[use_projectowner_sa] || true
  only:
    - master@gpii-ops/gpii-infra

aws-promote-to-prd:
  stage: promote-to-prd
  tags:
    - aws
  script:
    - export DATESTAMP="$(date -u '+%Y%m%d%H%M%S')"  # e.g. 20170603220542. Uses UTC.
    - echo "DATESTAMP is $DATESTAMP"  # So it's visible in the log
    - git tag "deploy-aws-prd-$DATESTAMP"
    # gitlab is not clever enough to clean up an added remote and git complains
    # if we add a remote that already exists.
    - git remote | grep -q "^origin-rw" || git remote add origin-rw git@github.com:gpii-ops/gpii-infra
    - git push --tags origin-rw
  when: manual
  allow_failure: false
  only:
    - master@gpii-ops/gpii-infra

gcp-promote-to-prd:
  stage: promote-to-prd
  tags:
    - gcp
  script:
    - export DATESTAMP="$(date -u '+%Y%m%d%H%M%S')"  # e.g. 20170603220542. Uses UTC.
    - echo "DATESTAMP is $DATESTAMP"  # So it's visible in the log
    - git tag "deploy-gcp-prd-$DATESTAMP"
    # gitlab is not clever enough to clean up an added remote and git complains
    # if we add a remote that already exists.
    - git remote | grep -q "^origin-rw" || git remote add origin-rw git@github.com:gpii-ops/gpii-infra
    - git push --tags origin-rw
  when: manual
  allow_failure: false
  only:
    - master@gpii-ops/gpii-infra

aws-prd:
  stage: prd
  variables:
    RAKE_REALLY_RUN_IN_PRD: "true"
  tags:
    - aws
  environment:
    name: prd
  script:
    - cd aws/prd
    - rake clobber
    - rake
  only:
    - master@gpii-ops/gpii-infra

gcp-prd:
  stage: prd
  variables:
    RAKE_REALLY_RUN_IN_PRD: "true"
  tags:
    - gcp
  environment:
    name: prd
  script:
    - cd gcp/live/prd
    - rake clobber
    - rake configure_serviceaccount_ci_restore
    # Rotate Terraform state key and secrets KMS key to exercise secrets management
    - rake rotate_tfstate_key RAKE_REALLY_DESTROY_IN_PRD=true
    - rake rotate_secrets_key RAKE_REALLY_DESTROY_IN_PRD=true
    - rake
    - rake test_preferences RAKE_REALLY_DESTROY_IN_PRD=true
    - rake test_flowmanager RAKE_REALLY_DESTROY_IN_PRD=true
  after_script:
    # Clean up even if something failed.
    - cd gcp/live/prd
    # Destroy Locust module (used for smoke tests) and its TF state
    - rake destroy_module[locust] RAKE_REALLY_DESTROY_IN_PRD=true || true
    - rake destroy_tfstate[locust] RAKE_REALLY_DESTROY_IN_PRD=true || true
    # Remove all SA keys except current one to prevent hitting 10 keys per SA limit (GPII-3299)
    - rake destroy_sa_keys[use_projectowner_sa] RAKE_REALLY_DESTROY_IN_PRD=true || true
  only:
    - master@gpii-ops/gpii-infra
